---
http_interactions:
- request:
    method: get
    uri: https://www.data.gouv.fr/fr/datasets/base-sirene-des-entreprises-et-de-leurs-etablissements-siren-siret
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 301
      message: MOVED PERMANENTLY
    headers:
      Server:
      - nginx
      Date:
      - Wed, 03 Jul 2019 09:21:35 GMT
      Content-Type:
      - text/html; charset=utf-8
      Content-Length:
      - '415'
      Connection:
      - keep-alive
      Location:
      - https://www.data.gouv.fr/fr/datasets/base-sirene-des-entreprises-et-de-leurs-etablissements-siren-siret/
      Pragma:
      - public
      Cache-Control:
      - public
      Strict-Transport-Security:
      - max-age=31536000
      Content-Security-Policy:
      - frame-ancestors *.data.gouv.fr;
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
    body:
      encoding: UTF-8
      string: |-
        <!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
        <title>Redirecting...</title>
        <h1>Redirecting...</h1>
        <p>You should be redirected automatically to target URL: <a href="https://www.data.gouv.fr/fr/datasets/base-sirene-des-entreprises-et-de-leurs-etablissements-siren-siret/">https://www.data.gouv.fr/fr/datasets/base-sirene-des-entreprises-et-de-leurs-etablissements-siren-siret/</a>.  If not click the link.
    http_version: 
  recorded_at: Wed, 03 Jul 2019 09:21:35 GMT
- request:
    method: get
    uri: https://www.data.gouv.fr/fr/datasets/base-sirene-des-entreprises-et-de-leurs-etablissements-siren-siret/
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Server:
      - nginx
      Date:
      - Wed, 03 Jul 2019 09:21:35 GMT
      Content-Type:
      - text/html; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Vary:
      - Accept-Encoding
      - Accept-Encoding
      - Cookie
      Set-Cookie:
      - session=d3~eyJjc3JmX3Rva2VuIjp7IiBiIjoiWkdSbU56ZG1Oamd4TW1ZNVl6VmxPVGMwTVRrMFl6Tm1aREptTVdSaE0yVTFNRGMxWkRFME53PT0ifX0.XRxznw.4m12y2S2c8T_-T0mYWy5OHvy6RE;
        Domain=.www.data.gouv.fr; HttpOnly; Path=/
      Pragma:
      - public
      Cache-Control:
      - public
      Strict-Transport-Security:
      - max-age=31536000
      Content-Security-Policy:
      - frame-ancestors *.data.gouv.fr;
      X-Content-Type-Options:
      - nosniff
      X-Xss-Protection:
      - 1; mode=block
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
    http_version: 
  recorded_at: Wed, 03 Jul 2019 09:21:35 GMT
recorded_with: VCR 4.0.0
